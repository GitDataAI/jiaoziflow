/*
 * jiaozifs API
 *
 * jiaozifs HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Change {
    #[serde(rename = "path")]
    pub path: String,
    #[serde(rename = "action")]
    pub action: Action,
    #[serde(rename = "base_hash", skip_serializing_if = "Option::is_none")]
    pub base_hash: Option<String>,
    #[serde(rename = "to_hash", skip_serializing_if = "Option::is_none")]
    pub to_hash: Option<String>,
}

impl Change {
    pub fn new(path: String, action: Action) -> Change {
        Change {
            path,
            action,
            base_hash: None,
            to_hash: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "1")]
    Variant1,
    #[serde(rename = "2")]
    Variant2,
    #[serde(rename = "3")]
    Variant3,
}

impl Default for Action {
    fn default() -> Action {
        Self::Variant1
    }
}

