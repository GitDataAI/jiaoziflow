/*
 * jiaozifs API
 *
 * jiaozifs HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserInfo {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "current_sign_in_at", skip_serializing_if = "Option::is_none")]
    pub current_sign_in_at: Option<i64>,
    #[serde(rename = "last_sign_in_at", skip_serializing_if = "Option::is_none")]
    pub last_sign_in_at: Option<i64>,
    #[serde(rename = "current_sign_in_ip", skip_serializing_if = "Option::is_none")]
    pub current_sign_in_ip: Option<String>,
    #[serde(rename = "last_sign_in_ip", skip_serializing_if = "Option::is_none")]
    pub last_sign_in_ip: Option<String>,
    #[serde(rename = "created_at")]
    pub created_at: i64,
    #[serde(rename = "updated_at")]
    pub updated_at: i64,
}

impl UserInfo {
    pub fn new(id: uuid::Uuid, name: String, email: String, created_at: i64, updated_at: i64) -> UserInfo {
        UserInfo {
            id,
            name,
            email,
            current_sign_in_at: None,
            last_sign_in_at: None,
            current_sign_in_ip: None,
            last_sign_in_ip: None,
            created_at,
            updated_at,
        }
    }
}

