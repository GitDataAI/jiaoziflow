/*
 * jiaozifs API
 *
 * jiaozifs HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ArchiveType {
    #[serde(rename = "zip")]
    Zip,
    #[serde(rename = "car")]
    Car,

}

impl std::fmt::Display for ArchiveType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Zip => write!(f, "zip"),
            Self::Car => write!(f, "car"),
        }
    }
}

impl Default for ArchiveType {
    fn default() -> ArchiveType {
        Self::Zip
    }
}

