/*
 * jiaozifs API
 *
 * jiaozifs HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};


#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RefType {
    #[serde(rename = "branch")]
    Branch,
    #[serde(rename = "wip")]
    Wip,
    #[serde(rename = "tag")]
    Tag,
    #[serde(rename = "commit")]
    Commit,
}

impl std::fmt::Display for RefType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Branch => write!(f, "branch"),
            Self::Wip => write!(f, "wip"),
            Self::Tag => write!(f, "tag"),
            Self::Commit => write!(f, "commit"),
        }
    }
}

impl Default for RefType {
    fn default() -> RefType {
        Self::Branch
    }
}
