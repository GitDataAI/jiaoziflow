/*
 * jiaozifs API
 *
 * jiaozifs HTTP API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Wip {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "current_tree")]
    pub current_tree: String,
    #[serde(rename = "base_commit")]
    pub base_commit: String,
    #[serde(rename = "repository_id")]
    pub repository_id: uuid::Uuid,
    #[serde(rename = "ref_id")]
    pub ref_id: uuid::Uuid,
    #[serde(rename = "state")]
    pub state: i32,
    #[serde(rename = "creator_id")]
    pub creator_id: uuid::Uuid,
    #[serde(rename = "created_at")]
    pub created_at: i64,
    #[serde(rename = "updated_at")]
    pub updated_at: i64,
}

impl Wip {
    pub fn new(id: uuid::Uuid, current_tree: String, base_commit: String, repository_id: uuid::Uuid, ref_id: uuid::Uuid, state: i32, creator_id: uuid::Uuid, created_at: i64, updated_at: i64) -> Wip {
        Wip {
            id,
            current_tree,
            base_commit,
            repository_id,
            ref_id,
            state,
            creator_id,
            created_at,
            updated_at,
        }
    }
}

